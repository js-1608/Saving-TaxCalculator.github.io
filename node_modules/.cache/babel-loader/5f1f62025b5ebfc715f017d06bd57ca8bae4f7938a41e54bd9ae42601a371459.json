{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shree\\\\Desktop\\\\react\\\\investment\\\\src\\\\Component\\\\TableResult\\\\TableResult.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat('en-us', {\n  style: 'currency',\n  currency: 'usd',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nconst TableResult = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Interest (Year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Invested Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.data.map(yearData => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: yearData.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.savingsEndOfYear)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.yearlyInterest)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(yearData.savingsEndOfYear - props.intialInvestment - yearData.yearlyContribution * yearData.year)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatter.format(props.intialInvestment + yearData.yearlyContribution * yearData.year)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, yearData.year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TableResult;\nexport default TableResult;\nvar _c;\n$RefreshReg$(_c, \"TableResult\");","map":{"version":3,"names":["formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","TableResult","props","_jsxDEV","children","className","fileName","_jsxFileName","lineNumber","columnNumber","data","map","yearData","year","format","savingsEndOfYear","yearlyInterest","intialInvestment","yearlyContribution","_c","$RefreshReg$"],"sources":["C:/Users/shree/Desktop/react/investment/src/Component/TableResult/TableResult.js"],"sourcesContent":["const formatter=new Intl.NumberFormat('en-us',{\r\n  style:'currency',\r\n  currency:'usd',\r\n  minimumFractionDigits:2,\r\n  maximumFractionDigits:2,\r\n});\r\n\r\n\r\nconst TableResult = (props) => {\r\n  return (\r\n    <div>\r\n      <table className=\"result\">\r\n        <thead>\r\n          <tr>\r\n            <th>Year</th>\r\n            <th>Total Savings</th>\r\n            <th>Interest (Year)</th>\r\n            <th>Total Interest</th>\r\n            <th>Invested Capital</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.data.map((yearData) => (\r\n              < tr key={yearData.year}>\r\n             <td>{yearData.year}</td>\r\n              <td>{formatter.format(yearData.savingsEndOfYear)}</td>\r\n              <td>{formatter.format(yearData.yearlyInterest)}</td>\r\n\r\n              <td>{formatter.format(yearData.savingsEndOfYear - props.intialInvestment -yearData.yearlyContribution * yearData.year)}</td>\r\n              <td>{formatter.format(props.intialInvestment + \r\n              yearData.yearlyContribution * yearData.year)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableResult;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}